package com.mediscreen.historymicroservice.unitaryTest;

import com.mediscreen.historymicroservice.dto.PatientHistoryDTO;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import javax.validation.ConstraintViolation;
import javax.validation.Validation;
import javax.validation.Validator;
import javax.validation.ValidatorFactory;
import java.time.LocalDate;
import java.util.Set;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class PatientHistoryDtoTest {

    private static Validator validator;

    @BeforeAll
    public static void setupValidator(){
        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        validator = factory.getValidator();
    }

    //---------- All Good---------------------------------------------------------------------------------
    @Test
    @DisplayName("PatientHistoryDTO constraints test with params valid")
    public void patientHistoryDtoAllParamsGoodTest() {
        LocalDate date = LocalDate.now();
        PatientHistoryDTO phDTO = new PatientHistoryDTO( "id generated by mongoDB", 1, date,
                "a note from a doctor on a patient");
        Set<ConstraintViolation<PatientHistoryDTO>> constraintViolations = validator.validate(phDTO);
        assertEquals(0, constraintViolations.size());
    }

    //---------- All Good---------------------------------------------------------------------------------
    @Test
    @DisplayName("PatientHistoryDTO constraints test with params null")
    public void patientHistoryDtoAllParamsNullTest() {
        PatientHistoryDTO phDTO = new PatientHistoryDTO( "id generated by mongoDB", null, null, null);
        Set<ConstraintViolation<PatientHistoryDTO>> constraintViolations = validator.validate(phDTO);
        assertEquals(3, constraintViolations.size());
    }
    //---------- All Good---------------------------------------------------------------------------------
    @Test
    @DisplayName("PatientHistoryDTO constraints test with params Null and Empty")
    public void patientHistoryDtoAllParamsNullEmptyTest() {
        PatientHistoryDTO phDTO = new PatientHistoryDTO( "id generated by mongoDB", null, null, "");
        Set<ConstraintViolation<PatientHistoryDTO>> constraintViolations = validator.validate(phDTO);
        assertEquals(3, constraintViolations.size());
    }
}
